CRUD

curl -X POST http://localhost:5000/tasks -H "Content-Type: application/json" -d '{"title": "Sample Task", "description": "This is a test task.", "user_id": 1}'
curl http://localhost:5000/tasks
curl http://localhost:5000/tasks/1
curl -X PUT http://localhost:5000/tasks/1 -H "Content-Type: application/json" -d '{"title": "Updated Task", "description": "Updated description.", "is_done": true}'
curl -X DELETE http://localhost:5000/tasks/1


Applying migrations manually

docker-compose exec web sh
flask db migrate
flask db upgrade

Check the database schemas

docker-compose exec db psql -U postgres -d postgres
\dt

Ensuring user id exists

docker-compose exec web flask shell

from app import db, User

# Create a new user with id=1
new_user = User(username="testuser", email="testuser@example.com")
db.session.add(new_user)
db.session.commit()


docker-compose exec db psql -U postgres -d postgres

INSERT INTO user (username, email) VALUES ('testuser', 'testuser@example.com');
