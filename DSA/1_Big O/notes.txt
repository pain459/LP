only 3 cases in the program

omega   -  Ω
theta   -  θ
omicron -  Ο

best case is omega, mid case is theta and worst case is Omicron.

In terms of Big O, its always the worst case only.


---

O(n) -- always a proportioanal graph

---
if a job take n time and 2 iterations take 2n times, the complexity shouldn't be O(2n), instead it is O(n)
This rule is called as dropping the constants.

---
If a loop is running for n time and a loop is running internal to another loop, the complexity will be n * n, that is O(n^2)

---
Drop non-dominants. Same example where we have one operation of O(n^2) and O(n), it will become O(n^2 + n), now the non-dominant one is n and will be dropped.
So the complexity for this type of situation is O(n^2)

---
O(1) -- any simple operation like addition to the nth number is classified a O(1) complexity