# Connect to DB via psql

psql -h localhost -p 5432 -U admin -d rankings_board
Password for user admin:
psql (16.3 (Ubuntu 16.3-0ubuntu0.24.04.1))
Type "help" for help.

rankings_board=#

------

# Exploring databases

\l  -- List databases
\c rankings_board  -- Connect to the rankings_board database
\dt  -- List tables in the current database


rankings_board=# \l
                                                     List of databases
      Name      | Owner | Encoding | Locale Provider |  Collate   |   Ctype    | ICU Locale | ICU Rules | Access privileges
----------------+-------+----------+-----------------+------------+------------+------------+-----------+-------------------
 postgres       | admin | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           |
 rankings_board | admin | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           |
 template0      | admin | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | =c/admin         +
                |       |          |                 |            |            |            |           | admin=CTc/admin
 template1      | admin | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           | =c/admin         +
                |       |          |                 |            |            |            |           | admin=CTc/admin
(4 rows)

rankings_board=# \c rankings_board
You are now connected to database "rankings_board" as user "admin".
rankings_board=# \dt
Did not find any relations.
rankings_board=#

------

# Few more administrative activities from the psql shell.

Describe table
\d table_name

list users
\du

Create a new database
CREATE DATABASE database_name;

Drop a database
DROP DATABASE database_name;

Create a new user
CREATE USER username WITH PASSWORD 'password';

Grant priviliges to a user
GRANT ALL PRIVILEGES ON DATABASE database_name TO username;

Revoke priviliges from a user
REVOKE ALL PRIVILEGES ON DATABASE database_name FROM username;

Alter user role
ALTER USER username WITH SUPERUSER;

Drop a user
DROP USER username;


# Creating and managing tables

Create a new table

CREATE TABLE table_name (
    column1_name data_type constraints,
    column2_name data_type constraints,
    ...
);

drop a table

DROP TABLE table_name;

Insert data into a table

INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);

Update data in a table

UPDATE table_name SET column1 = value1, column2 = value2 WHERE condition;

Delete data from a table

DELETE FROM table_name WHERE condition;


# Backups and restores

Backup a database

pg_dump database_name > backup_file.sql

Restore a database

psql database_name < backup_file.sql

# Monitoring a database

Check server status

SELECT pg_is_in_recovery();

View active connections

SELECT * FROM pg_stat_activity;

Terminate a connection

SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE pid = process_id;

Analyze and vaccum

AMALYZE;
VACUUM;

# Useful meta commands

Show all meta commands
\?

Get help on SQL commands
\h command_name

Set output format
\pset format aligned|unaligned|html|latex|troff-ms|csv

Turn on/off timing
\timing

# Scripting and automation

Run SQL script
psql -h localhost -p 5432 -U admin -d rankings_board -f script.sql

Execute sql command from shell
psql -h localhost -p 5432 -U admin -d rankings_board -c "SQL_COMMAND"


# Find the size of the database
rankings_board=# SELECT pg_size_pretty( pg_database_size('rankings_board'));
 pg_size_pretty
----------------
 1601 MB
(1 row)

rankings_board=#

---

Check the materialized view from the database 

SELECT unique_id, player_age, status
	FROM rankings_board.player_status_materialized LIMIT 5;