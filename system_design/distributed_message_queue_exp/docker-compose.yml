version: '3.8'
networks:
  kafka_network:
    driver: overlay

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - kafka_network

  zookeeper-exporter:
    image: bitnami/jmx-exporter:latest
    environment:
      JMX_EXPORTER_PORT: 5556
      JMX_EXPORTER_CONFIG: /config/zookeeper_jmx_config.yml
      JMX_EXPORTER_SERVICE: zookeeper
    ports:
      - "5556:5556"
    volumes:
      - ./zookeeper_jmx_config.yml:/config/zookeeper_jmx_config.yml
    networks:
      - kafka_network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9999:9999"  # JMX port
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      JMX_PORT: 9999
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999"
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  producer:
    image: my_producer_image:latest
    depends_on:
      - kafka
    deploy:
      replicas: 10  # Scale the number of producer instances
    networks:
      - kafka_network

  consumer:
    image: my_consumer_image:latest
    depends_on:
      - kafka
    deploy:
      replicas: 10  # Scale the number of consumer instances
    networks:
      - kafka_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - kafka_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - kafka_network

volumes:
  grafana-data:
