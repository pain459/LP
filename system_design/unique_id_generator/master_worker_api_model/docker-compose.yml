version: '3.8'
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '512M'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  master:
    build: .
    container_name: master
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=app.py
    command: ["gunicorn", "--workers=12", "--timeout=3600", "-b", "0.0.0.0:5000", "app:app"]
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1G'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker1:
    build: .
    container_name: worker1
    command: ["python", "worker.py", "1"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker2:
    build: .
    container_name: worker2
    command: ["python", "worker.py", "2"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker3:
    build: .
    container_name: worker3
    command: ["python", "worker.py", "3"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker4:
    build: .
    container_name: worker4
    command: ["python", "worker.py", "4"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker5:
    build: .
    container_name: worker5
    command: ["python", "worker.py", "5"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker6:
    build: .
    container_name: worker6
    command: ["python", "worker.py", "6"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker7:
    build: .
    container_name: worker7
    command: ["python", "worker.py", "7"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker8:
    build: .
    container_name: worker8
    command: ["python", "worker.py", "8"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker9:
    build: .
    container_name: worker9
    command: ["python", "worker.py", "9"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker10:
    build: .
    container_name: worker10
    command: ["python", "worker.py", "10"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker11:
    build: .
    container_name: worker11
    command: ["python", "worker.py", "11"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  worker12:
    build: .
    container_name: worker12
    command: ["python", "worker.py", "12"]
    volumes:
      - .:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    depends_on:
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  opensearch:
    image: opensearchproject/opensearch:2.3.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
    ports:
      - "9200:9200"
      - "9600:9600"
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: '4G'
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep '\"status\":\"green\"' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.3.0
    container_name: opensearch-dashboards
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "5601:5601"
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '2G'
    depends_on:
      opensearch:
        condition: service_healthy

volumes:
  redis-data:
